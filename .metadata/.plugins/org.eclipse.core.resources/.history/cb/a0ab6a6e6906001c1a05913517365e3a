package com.everis.d4i.tutorial.services.impl;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import javax.persistence.EntityNotFoundException;

import org.modelmapper.ModelMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.everis.d4i.tutorial.entities.Category;
import com.everis.d4i.tutorial.entities.TvShow;
import com.everis.d4i.tutorial.exceptions.InternalServerErrorException;
import com.everis.d4i.tutorial.exceptions.NetflixException;
import com.everis.d4i.tutorial.exceptions.NotFoundException;
import com.everis.d4i.tutorial.json.CategoryRest;
import com.everis.d4i.tutorial.json.TvShowRest;
import com.everis.d4i.tutorial.repositories.TvShowRepository;
import com.everis.d4i.tutorial.services.TvShowService;
import com.everis.d4i.tutorial.utils.constants.ExceptionConstants;


@Service
public class TvShowServiceImpl implements TvShowService {

	private static final Logger LOGGER = LoggerFactory.getLogger(TvShowServiceImpl.class);

	
	@Autowired
	private TvShowRepository tvShowRepository;

	private ModelMapper modelMapper = new ModelMapper();

	@Override
	public List<TvShowRest> getTvShowsByCategory(Long categoryId) throws NetflixException {

		return tvShowRepository.findByCategoryId(categoryId).stream()
				.map(tvShow -> modelMapper.map(tvShow, TvShowRest.class)).collect(Collectors.toList());

	}

	@Override
	public TvShowRest getTvShowById(Long id) throws NetflixException {

		try {
			return modelMapper.map(tvShowRepository.getOne(id), TvShowRest.class);
		} catch (EntityNotFoundException entityNotFoundException) {
			throw new NotFoundException(entityNotFoundException.getMessage());
		}

	}

	@Override
	public TvShowRest createTvShow(TvShowRest tvShowRest) throws NetflixException {
			TvShow tvShow = new TvShow();
			tvShow.setName(tvShowRest.getName());
			tvShow.setShortDescription(tvShowRest.getShortDescription());
			tvShow.setLongDescription(tvShowRest.getLongDescription());
			tvShow.setYear(tvShowRest.getYear());
			tvShow.setRecommendedAge(tvShowRest.getRecommendedAge());
			
			Category category=new Category();
			category.setName(tvShowRest.getCategory().getName());
			
			tvShow.setCategory(category);
			tvShow.setAdvertising(tvShowRest.getAdvertising());
			
			try {
				tvShow = tvShowRepository.save(tvShow);
			} catch (final Exception e) {
				LOGGER.error(ExceptionConstants.INTERNAL_SERVER_ERROR, e);
				throw new InternalServerErrorException(ExceptionConstants.INTERNAL_SERVER_ERROR);
			}
			return modelMapper.map(tvShow, TvShowRest.class);
	}
	
	@Override
	 public TvShowRest updateTvShow(Long id, String name)throws NetflixException {
		
			
			Optional<TvShow> tvShow = tvShowRepository.findById(id);
			TvShow tvShowNew= tvShow.get();
			
			tvShowNew.setName(name);
			tvShowRepository.save(tvShowNew);
				
			return null;
			
			
	}


}
