package com.everis.d4i.tutorial.controllers.impl;



import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import com.everis.d4i.tutorial.json.ActorDataRest;
import com.everis.d4i.tutorial.json.ActorRest;
import com.everis.d4i.tutorial.services.ActorService;

@RunWith(SpringRunner.class)
class ActorControllerImplTest {

	
	@Autowired
	private MockMvc mockMvc;
	
	@Autowired
	private ActorService actorService;
	
	@Test
    public void getAllActorsTest() throws Exception {

 

        List<ActorDataRest> salida = new ArrayList<>();
        salida.add(new ActorDataRest(1L, "Actor1", "Actor1S"));
        salida.add(new ActorDataRest(Integer.toUnsignedLong(2), "Actor2", "Actor2S"));

 

        Mockito.when(actorService.getAllActorsData()).thenReturn(salida);

 

        final RequestBuilder request = MockMvcRequestBuilders
                .get(RestConstants.APPLICATION_NAME + RestConstants.API_VERSION_1 + RestConstants.RESOURCE_ACTOR)
                .accept(MediaType.APPLICATION_JSON);

 

        mockMvc.perform(request).andDo(print()).andExpect(status().isOk())
                .andExpect(content().json("{" + REQ_SUCCESS + "\"data\": [" + "{" + "\"id\": 1,"
                        + "\"name\": \"Actor1\"," + "\"surname\": \"Actor1S\"" + "}," + "{" + "\"id\": 2,"
                        + "\"name\": \"Actor2\"," + "\"surname\": \"Actor2S\"" + "}" + "]}"))
                .andReturn();

 

    }

}
